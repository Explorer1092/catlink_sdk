[tool.poetry]
name = "catlink-sdk"
version = "0.0.1"
description = "Python SDK for CatLink smart pet devices"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Explorer1092/catlink_sdk"
repository = "https://github.com/Explorer1092/catlink_sdk"
documentation = "https://github.com/Explorer1092/catlink_sdk#readme"
keywords = ["catlink", "pet", "iot", "smart-home", "litter-box"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "catlink_sdk"}]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.8.0"
cryptography = "^41.0.0"
rich = "^13.0.0"
toml = "^0.10.2"
croniter = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
ruff = "^0.1.0"
mypy = "^1.7.0"
twine = "^4.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.coverage.run]
source = ["catlink_sdk"]
